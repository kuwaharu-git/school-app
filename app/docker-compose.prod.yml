version: '3.9'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: always
    depends_on:
      - db
    networks:
      - app-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    # ビルド時/実行時に使う環境変数（.env から展開）
    environment:
      NEXT_PUBLIC_API_ORIGIN: ${NEXT_PUBLIC_API_ORIGIN:?NEXT_PUBLIC_API_ORIGIN not set}
    restart: always
    depends_on:
      - backend
    networks:
      - app-net

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    networks:
      - app-net
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
    networks:
      - app-net
    restart: always

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?MYSQL_ROOT_PASSWORD not set}
      MYSQL_DATABASE: ${DB_NAME:?DB_NAME not set}
      MYSQL_USER: ${DB_USER:?DB_USER not set}
      MYSQL_PASSWORD: ${DB_PASSWORD:?DB_PASSWORD not set}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-net
    restart: always

networks:
  app-net:
    driver: bridge

volumes:
  mysql-data:
  certbot-etc:
  certbot-var:
