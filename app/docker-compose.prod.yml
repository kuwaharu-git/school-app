version: '3.9'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file: .env
    environment:
      DB_HOST: db
      DB_PORT: 3306
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks: [app-net]

  frontend:
    image: kuwaharu/school-frontend:prod
    env_file: .env
    restart: always
    depends_on: [backend]
    networks: [app-net]

  nginx:
    image: nginx:1.27-alpine
    depends_on: [frontend, backend]
    ports: ["80:80","443:443"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    networks: [app-net]
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
    networks: [app-net]
    restart: always

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${DB_NAME:?}
      MYSQL_USER: ${DB_USER:?}
      MYSQL_PASSWORD: ${DB_PASSWORD:?}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d:ro
    networks: [app-net]
    restart: always
    healthcheck:
      test: ["CMD-SHELL","mysqladmin ping -uroot -p$MYSQL_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

networks:
  app-net:
    driver: bridge

volumes:
  mysql-data:
  certbot-etc:
  certbot-var:
